{"ast":null,"code":"/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [expandedBox, setExpandedBox] = useState(null);  // NEW\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const renderBoxes = () => {\r\n    const elements = [];\r\n    for (let i = 0; i < boxCount; i++) {\r\n      const boxId = `Box${i + 1}`;\r\n      const isExpanded = expandedBox === boxId;\r\n\r\n      elements.push(\r\n        <div key={boxId} className=\"locker-box\">\r\n          <div\r\n            className=\"box-title\"\r\n            onClick={() => toggleBox(boxId)}\r\n          >\r\n            {boxId}\r\n          </div>\r\n\r\n          {isExpanded && (\r\n            <div className=\"box-lockers\">\r\n              {Array.from({ length: lockersPerBox }, (_, j) => (\r\n                <div\r\n                  key={`${boxId}-L${j + 1}`}\r\n                  className=\"locker\"\r\n                  onClick={() => handleLockerClick(`${boxId}-L${j + 1}`)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n      <div className=\"lockers-grid\">{renderBoxes()}</div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange} />\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange} />\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange} />\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/\n/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [currentBoxIndex, setCurrentBoxIndex] = useState(0);\r\n  const [expandedBox, setExpandedBox] = useState(null);\r\n  const [assignedLockers, setAssignedLockers] = useState({});\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    const { recipientName, phone, productId } = parcelData;\r\n\r\n    if (!recipientName.trim() || !phone.trim() || !productId.trim()) {\r\n      alert('Please fill in all fields before assigning the parcel.');\r\n      return;\r\n    }\r\n\r\n    setAssignedLockers((prev) => ({\r\n      ...prev,\r\n      [selectedLocker]: true,\r\n    }));\r\n\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setCurrentBoxIndex((prev) => (prev - 1 + boxCount) % boxCount);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentBoxIndex((prev) => (prev + 1) % boxCount);\r\n  };\r\n\r\n  const renderCurrentBox = () => {\r\n    const boxId = `Box${currentBoxIndex + 1}`;\r\n    const isExpanded = expandedBox === boxId;\r\n\r\n    return (\r\n      <div className=\"locker-box slide-in\">\r\n        <div className=\"box-title\" onClick={() => toggleBox(boxId)}>\r\n          {boxId}\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"box-lockers\">\r\n            {Array.from({ length: lockersPerBox }, (_, j) => {\r\n              const lockerId = `${boxId}-L${j + 1}`;\r\n              const isAssigned = assignedLockers[lockerId];\r\n\r\n              return (\r\n                <div\r\n                  key={lockerId}\r\n                  className={`locker ${isAssigned ? 'assigned' : 'unassigned'}`}\r\n                  onClick={() => handleLockerClick(lockerId)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n\r\n      <div className=\"legend\">\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box unassigned\"></div> Unassigned\r\n        </div>\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box assigned\"></div> Assigned\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navigation-buttons\">\r\n        <button onClick={handlePrev}>{'< Prev'}</button>\r\n        {renderCurrentBox()}\r\n        <button onClick={handleNext}>{'Next >'}</button>\r\n      </div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange}/>\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange}/>\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange}/>\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard; */\n\n// src/components/Dboard.jsx\n/*import React, { useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [selectedSystem, setSelectedSystem] = useState('Main Building');\r\n\r\n  const systems = [\r\n    { name: 'Main Building', location: 'Lobby' },\r\n    { name: 'Residence Hall', location: 'First Floor' },\r\n    { name: 'Gym', location: 'Entrance' }\r\n  ];\r\n\r\n  const lockers = Array.from({ length: 18 }, (_, i) => {\r\n    const row = Math.floor(i / 6) + 1;\r\n    const col = (i % 6) + 1;\r\n    return {\r\n      id: `0${row}-0${col}`,\r\n      status: 'available'\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"top-bar\">\r\n        <div>Community Manager Dashboard</div>\r\n        <div>Community ID: <strong>COM001</strong></div>\r\n      </div>\r\n\r\n      <div className=\"tabs\">\r\n        <div className=\"tab active\">Locker Management</div>\r\n        <div className=\"tab\">Staff</div>\r\n        <div className=\"tab\">Residents <span className=\"badge\">2</span></div>\r\n        <div className=\"tab\">Parcel History</div>\r\n      </div>\r\n\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"left-panel\">\r\n          <h3>Locker Systems</h3>\r\n          <p>Manage your locker systems for community COM001</p>\r\n          {systems.map((system, index) => (\r\n            <div\r\n              key={index}\r\n              className={`system-entry ${selectedSystem === system.name ? 'selected' : ''}`}\r\n              onClick={() => setSelectedSystem(system.name)}\r\n            >\r\n              {system.name}<br />\r\n              <small>{system.location}</small>\r\n            </div>\r\n          ))}\r\n          <button className=\"add-button\">+ Add System</button>\r\n        </div>\r\n\r\n        <div className=\"right-panel\">\r\n          <h2>{selectedSystem}</h2>\r\n          <p>{systems.find(sys => sys.name === selectedSystem)?.location} - {selectedSystem} lockers</p>\r\n\r\n          <div>\r\n            <button className=\"add-button\">+ Add Lockers</button>\r\n            <button className=\"add-button\" style={{ backgroundColor: '#ffdddd', color: 'red' }}>– Remove Lockers</button>\r\n            <button className=\"add-button\" style={{ float: 'right' }}>📦 Store Package</button>\r\n          </div>\r\n\r\n          <div className=\"status-legend\">\r\n            <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'green', borderRadius: '50%' }}></span> Available</div>\r\n            <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'red', borderRadius: '50%' }}></span> Occupied</div>\r\n          </div>\r\n\r\n          <div className=\"locker-grid\">\r\n            {lockers.map((locker) => (\r\n              <div className={`locker-tile ${locker.status}`} key={locker.id}>\r\n                <span role=\"img\" aria-label=\"lock\">{locker.status === 'available' ? '🔓' : '🔒'}</span>\r\n                <small>{locker.id}</small>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/\n// src/components/Dboard.jsx\nimport React, { useState, useEffect } from 'react';\nimport './Dboard.css';\nconst Dboard = () => {\n  const [selectedSystem, setSelectedSystem] = useState('Main Building');\n  const [selectedTab, setSelectedTab] = useState('Locker Management');\n  const [lockers, setLockers] = useState([]);\n  const [showAssignModal, setShowAssignModal] = useState(false);\n  const [selectedLockerId, setSelectedLockerId] = useState(null);\n  const communityName = localStorage.getItem('communityName') || 'COM001';\n  const systems = [{\n    name: 'Main Building',\n    location: 'Lobby'\n  }];\n  const numberOfLockerBoxes = parseInt(localStorage.getItem('numberOfLockerBoxes')) || 3;\n  const lockersInEachBox = parseInt(localStorage.getItem('lockersInEachBox')) || 6;\n  useEffect(() => {\n    const generatedLockers = [];\n    for (let box = 1; box <= numberOfLockerBoxes; box++) {\n      for (let lockerNum = 1; lockerNum <= lockersInEachBox; lockerNum++) {\n        generatedLockers.push({\n          id: `B${box}-L${lockerNum}`,\n          status: 'available'\n        });\n      }\n    }\n    setLockers(generatedLockers);\n  }, [numberOfLockerBoxes, lockersInEachBox]);\n  const renderLockerManagement = () => {\n    var _systems$find;\n    return React.createElement(React.Fragment, {}, React.createElement('div', {\n      className: 'left-panel'\n    }, [React.createElement('h3', {\n      key: 'heading'\n    }, 'Locker Systems'), React.createElement('p', {\n      key: 'desc'\n    }, `Manage your locker systems for community ${communityName}`), ...systems.map((system, index) => React.createElement('div', {\n      key: `system-${index}`,\n      className: `system-entry ${selectedSystem === system.name ? 'selected' : ''}`,\n      onClick: () => setSelectedSystem(system.name)\n    }, [system.name, React.createElement('br', {\n      key: 'br'\n    }), React.createElement('small', {\n      key: 'small'\n    }, system.location)])), React.createElement('button', {\n      className: 'add-button',\n      key: 'add-sys'\n    }, '+ Add System')]), React.createElement('div', {\n      className: 'right-panel'\n    }, [React.createElement('h2', {\n      key: 'sys'\n    }, selectedSystem), React.createElement('p', {\n      key: 'loc'\n    }, `${(_systems$find = systems.find(sys => sys.name === selectedSystem)) === null || _systems$find === void 0 ? void 0 : _systems$find.location} - ${selectedSystem} lockers`), React.createElement('div', {\n      key: 'toolbar'\n    }, [React.createElement('button', {\n      className: 'add-button',\n      key: 'add-lock'\n    }, '+ Add Lockers'), React.createElement('button', {\n      className: 'add-button',\n      key: 'remove-lock',\n      style: {\n        backgroundColor: '#ffdddd',\n        color: 'red'\n      }\n    }, '– Remove Lockers'), React.createElement('button', {\n      className: 'add-button',\n      key: 'store-package',\n      style: {\n        float: 'right'\n      }\n    }, '📦 Store Package')]), React.createElement('div', {\n      className: 'status-legend',\n      key: 'legend'\n    }, [React.createElement('div', {\n      className: 'item',\n      key: 'available'\n    }, React.createElement('span', {\n      style: {\n        width: '12px',\n        height: '12px',\n        background: 'green',\n        borderRadius: '50%',\n        display: 'inline-block',\n        marginRight: '6px'\n      }\n    }), ' Available'), React.createElement('div', {\n      className: 'item',\n      key: 'occupied'\n    }, React.createElement('span', {\n      style: {\n        width: '12px',\n        height: '12px',\n        background: 'red',\n        borderRadius: '50%',\n        display: 'inline-block',\n        marginRight: '6px'\n      }\n    }), ' Occupied')]), React.createElement('div', {\n      className: 'locker-grid',\n      key: 'locker-grid'\n    }, lockers.map(locker => React.createElement('div', {\n      key: locker.id,\n      className: `locker-tile ${locker.status}`,\n      onClick: () => {\n        setSelectedLockerId(locker.id);\n        setShowAssignModal(true);\n      }\n    }, [React.createElement('span', {\n      key: 'icon',\n      role: 'img',\n      'aria-label': 'lock'\n    }, locker.status === 'available' ? '🔓' : '🔒'), React.createElement('small', {\n      key: 'id'\n    }, locker.id)])))]));\n  };\n  const renderContent = () => {\n    if (selectedTab === 'Locker Management') {\n      return renderLockerManagement();\n    } else if (selectedTab === 'Staff') {\n      return React.createElement('div', {}, [React.createElement('h2', {\n        key: 'staff-title'\n      }, 'Staff Management Page'), React.createElement('p', {\n        key: 'staff-desc'\n      }, 'Staff details and management here.')]);\n    } else if (selectedTab === 'Parcel History') {\n      return React.createElement('div', {}, [React.createElement('h2', {\n        key: 'ph-title'\n      }, 'Parcel History Page'), React.createElement('p', {\n        key: 'ph-desc'\n      }, 'Parcel history and records here.')]);\n    }\n  };\n  const modal = showAssignModal && React.createElement('div', {\n    className: 'modal-overlay'\n  }, React.createElement('div', {\n    className: 'modal-content'\n  }, [React.createElement('h3', {\n    key: 'modal-title'\n  }, ['Assign New Parcel to Locker', React.createElement('br', {\n    key: 'br1'\n  }), React.createElement('strong', {\n    key: 'strong'\n  }, selectedLockerId)]), React.createElement('label', {\n    key: 'label1'\n  }, 'Recipient Name:'), React.createElement('input', {\n    key: 'input1',\n    type: 'text',\n    placeholder: 'Enter recipient name'\n  }), React.createElement('label', {\n    key: 'label2'\n  }, 'Phone Number:'), React.createElement('input', {\n    key: 'input2',\n    type: 'text',\n    placeholder: 'Enter phone number'\n  }), React.createElement('label', {\n    key: 'label3'\n  }, 'Product ID / Parcel Description:'), React.createElement('input', {\n    key: 'input3',\n    type: 'text',\n    placeholder: 'Enter product ID or description'\n  }), React.createElement('div', {\n    key: 'buttons',\n    className: 'modal-buttons'\n  }, [React.createElement('button', {\n    key: 'assign',\n    onClick: () => setShowAssignModal(false)\n  }, 'Assign Parcel'), React.createElement('button', {\n    key: 'cancel',\n    onClick: () => setShowAssignModal(false)\n  }, 'Cancel')])]));\n  return React.createElement('div', {\n    className: 'dashboard-container'\n  }, [React.createElement('div', {\n    className: 'top-bar',\n    key: 'top'\n  }, [React.createElement('div', {\n    key: 'top1'\n  }, 'Community Manager Dashboard'), React.createElement('div', {\n    key: 'top2'\n  }, ['Community Name: ', React.createElement('strong', {\n    key: 'name'\n  }, communityName)])]), React.createElement('div', {\n    className: 'tabs',\n    key: 'tabs'\n  }, ['Locker Management', 'Staff', 'Parcel History'].map(tab => React.createElement('div', {\n    key: tab,\n    className: `tab ${selectedTab === tab ? 'active' : ''}`,\n    onClick: () => setSelectedTab(tab),\n    style: {\n      cursor: 'pointer'\n    }\n  }, tab))), React.createElement('div', {\n    className: 'dashboard-content',\n    key: 'content'\n  }, [renderContent(), modal])]);\n};\nexport default Dboard;","map":{"version":3,"names":["React","useState","useEffect","Dboard","selectedSystem","setSelectedSystem","selectedTab","setSelectedTab","lockers","setLockers","showAssignModal","setShowAssignModal","selectedLockerId","setSelectedLockerId","communityName","localStorage","getItem","systems","name","location","numberOfLockerBoxes","parseInt","lockersInEachBox","generatedLockers","box","lockerNum","push","id","status","renderLockerManagement","_systems$find","createElement","Fragment","className","key","map","system","index","onClick","find","sys","style","backgroundColor","color","float","width","height","background","borderRadius","display","marginRight","locker","role","renderContent","modal","type","placeholder","tab","cursor"],"sources":["C:/Users/nerel/OneDrive/Documents/smartlocker/src/components/Dboard.js"],"sourcesContent":["\r\n/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [expandedBox, setExpandedBox] = useState(null);  // NEW\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const renderBoxes = () => {\r\n    const elements = [];\r\n    for (let i = 0; i < boxCount; i++) {\r\n      const boxId = `Box${i + 1}`;\r\n      const isExpanded = expandedBox === boxId;\r\n\r\n      elements.push(\r\n        <div key={boxId} className=\"locker-box\">\r\n          <div\r\n            className=\"box-title\"\r\n            onClick={() => toggleBox(boxId)}\r\n          >\r\n            {boxId}\r\n          </div>\r\n\r\n          {isExpanded && (\r\n            <div className=\"box-lockers\">\r\n              {Array.from({ length: lockersPerBox }, (_, j) => (\r\n                <div\r\n                  key={`${boxId}-L${j + 1}`}\r\n                  className=\"locker\"\r\n                  onClick={() => handleLockerClick(`${boxId}-L${j + 1}`)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n      <div className=\"lockers-grid\">{renderBoxes()}</div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange} />\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange} />\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange} />\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/\r\n/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [currentBoxIndex, setCurrentBoxIndex] = useState(0);\r\n  const [expandedBox, setExpandedBox] = useState(null);\r\n  const [assignedLockers, setAssignedLockers] = useState({});\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    const { recipientName, phone, productId } = parcelData;\r\n\r\n    if (!recipientName.trim() || !phone.trim() || !productId.trim()) {\r\n      alert('Please fill in all fields before assigning the parcel.');\r\n      return;\r\n    }\r\n\r\n    setAssignedLockers((prev) => ({\r\n      ...prev,\r\n      [selectedLocker]: true,\r\n    }));\r\n\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setCurrentBoxIndex((prev) => (prev - 1 + boxCount) % boxCount);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentBoxIndex((prev) => (prev + 1) % boxCount);\r\n  };\r\n\r\n  const renderCurrentBox = () => {\r\n    const boxId = `Box${currentBoxIndex + 1}`;\r\n    const isExpanded = expandedBox === boxId;\r\n\r\n    return (\r\n      <div className=\"locker-box slide-in\">\r\n        <div className=\"box-title\" onClick={() => toggleBox(boxId)}>\r\n          {boxId}\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"box-lockers\">\r\n            {Array.from({ length: lockersPerBox }, (_, j) => {\r\n              const lockerId = `${boxId}-L${j + 1}`;\r\n              const isAssigned = assignedLockers[lockerId];\r\n\r\n              return (\r\n                <div\r\n                  key={lockerId}\r\n                  className={`locker ${isAssigned ? 'assigned' : 'unassigned'}`}\r\n                  onClick={() => handleLockerClick(lockerId)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n\r\n      <div className=\"legend\">\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box unassigned\"></div> Unassigned\r\n        </div>\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box assigned\"></div> Assigned\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navigation-buttons\">\r\n        <button onClick={handlePrev}>{'< Prev'}</button>\r\n        {renderCurrentBox()}\r\n        <button onClick={handleNext}>{'Next >'}</button>\r\n      </div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange}/>\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange}/>\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange}/>\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard; */\r\n\r\n// src/components/Dboard.jsx\r\n/*import React, { useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [selectedSystem, setSelectedSystem] = useState('Main Building');\r\n\r\n  const systems = [\r\n    { name: 'Main Building', location: 'Lobby' },\r\n    { name: 'Residence Hall', location: 'First Floor' },\r\n    { name: 'Gym', location: 'Entrance' }\r\n  ];\r\n\r\n  const lockers = Array.from({ length: 18 }, (_, i) => {\r\n    const row = Math.floor(i / 6) + 1;\r\n    const col = (i % 6) + 1;\r\n    return {\r\n      id: `0${row}-0${col}`,\r\n      status: 'available'\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"top-bar\">\r\n        <div>Community Manager Dashboard</div>\r\n        <div>Community ID: <strong>COM001</strong></div>\r\n      </div>\r\n\r\n      <div className=\"tabs\">\r\n        <div className=\"tab active\">Locker Management</div>\r\n        <div className=\"tab\">Staff</div>\r\n        <div className=\"tab\">Residents <span className=\"badge\">2</span></div>\r\n        <div className=\"tab\">Parcel History</div>\r\n      </div>\r\n\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"left-panel\">\r\n          <h3>Locker Systems</h3>\r\n          <p>Manage your locker systems for community COM001</p>\r\n          {systems.map((system, index) => (\r\n            <div\r\n              key={index}\r\n              className={`system-entry ${selectedSystem === system.name ? 'selected' : ''}`}\r\n              onClick={() => setSelectedSystem(system.name)}\r\n            >\r\n              {system.name}<br />\r\n              <small>{system.location}</small>\r\n            </div>\r\n          ))}\r\n          <button className=\"add-button\">+ Add System</button>\r\n        </div>\r\n\r\n        <div className=\"right-panel\">\r\n          <h2>{selectedSystem}</h2>\r\n          <p>{systems.find(sys => sys.name === selectedSystem)?.location} - {selectedSystem} lockers</p>\r\n\r\n          <div>\r\n            <button className=\"add-button\">+ Add Lockers</button>\r\n            <button className=\"add-button\" style={{ backgroundColor: '#ffdddd', color: 'red' }}>– Remove Lockers</button>\r\n            <button className=\"add-button\" style={{ float: 'right' }}>📦 Store Package</button>\r\n          </div>\r\n\r\n          <div className=\"status-legend\">\r\n            <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'green', borderRadius: '50%' }}></span> Available</div>\r\n            <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'red', borderRadius: '50%' }}></span> Occupied</div>\r\n          </div>\r\n\r\n          <div className=\"locker-grid\">\r\n            {lockers.map((locker) => (\r\n              <div className={`locker-tile ${locker.status}`} key={locker.id}>\r\n                <span role=\"img\" aria-label=\"lock\">{locker.status === 'available' ? '🔓' : '🔒'}</span>\r\n                <small>{locker.id}</small>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/\r\n// src/components/Dboard.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [selectedSystem, setSelectedSystem] = useState('Main Building');\r\n  const [selectedTab, setSelectedTab] = useState('Locker Management');\r\n  const [lockers, setLockers] = useState([]);\r\n  const [showAssignModal, setShowAssignModal] = useState(false);\r\n  const [selectedLockerId, setSelectedLockerId] = useState(null);\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'COM001';\r\n\r\n  const systems = [\r\n    { name: 'Main Building', location: 'Lobby' },\r\n  ];\r\n\r\n  const numberOfLockerBoxes = parseInt(localStorage.getItem('numberOfLockerBoxes')) || 3;\r\n  const lockersInEachBox = parseInt(localStorage.getItem('lockersInEachBox')) || 6;\r\n\r\n  useEffect(() => {\r\n    const generatedLockers = [];\r\n    for (let box = 1; box <= numberOfLockerBoxes; box++) {\r\n      for (let lockerNum = 1; lockerNum <= lockersInEachBox; lockerNum++) {\r\n        generatedLockers.push({\r\n          id: `B${box}-L${lockerNum}`,\r\n          status: 'available',\r\n        });\r\n      }\r\n    }\r\n    setLockers(generatedLockers);\r\n  }, [numberOfLockerBoxes, lockersInEachBox]);\r\n\r\n  const renderLockerManagement = () => {\r\n    return React.createElement(\r\n      React.Fragment,\r\n      {},\r\n      React.createElement(\r\n        'div',\r\n        { className: 'left-panel' },\r\n        [\r\n          React.createElement('h3', { key: 'heading' }, 'Locker Systems'),\r\n          React.createElement('p', { key: 'desc' }, `Manage your locker systems for community ${communityName}`),\r\n          ...systems.map((system, index) =>\r\n            React.createElement(\r\n              'div',\r\n              {\r\n                key: `system-${index}`,\r\n                className: `system-entry ${selectedSystem === system.name ? 'selected' : ''}`,\r\n                onClick: () => setSelectedSystem(system.name)\r\n              },\r\n              [system.name, React.createElement('br', { key: 'br' }), React.createElement('small', { key: 'small' }, system.location)]\r\n            )\r\n          ),\r\n          React.createElement('button', { className: 'add-button', key: 'add-sys' }, '+ Add System')\r\n        ]\r\n      ),\r\n      React.createElement(\r\n        'div',\r\n        { className: 'right-panel' },\r\n        [\r\n          React.createElement('h2', { key: 'sys' }, selectedSystem),\r\n          React.createElement('p', { key: 'loc' },\r\n            `${systems.find(sys => sys.name === selectedSystem)?.location} - ${selectedSystem} lockers`\r\n          ),\r\n          React.createElement(\r\n            'div',\r\n            { key: 'toolbar' },\r\n            [\r\n              React.createElement('button', { className: 'add-button', key: 'add-lock' }, '+ Add Lockers'),\r\n              React.createElement('button', {\r\n                className: 'add-button',\r\n                key: 'remove-lock',\r\n                style: { backgroundColor: '#ffdddd', color: 'red' }\r\n              }, '– Remove Lockers'),\r\n              React.createElement('button', {\r\n                className: 'add-button',\r\n                key: 'store-package',\r\n                style: { float: 'right' }\r\n              }, '📦 Store Package')\r\n            ]\r\n          ),\r\n          React.createElement(\r\n            'div',\r\n            { className: 'status-legend', key: 'legend' },\r\n            [\r\n              React.createElement('div', { className: 'item', key: 'available' },\r\n                React.createElement('span', {\r\n                  style: { width: '12px', height: '12px', background: 'green', borderRadius: '50%', display: 'inline-block', marginRight: '6px' }\r\n                }), ' Available'\r\n              ),\r\n              React.createElement('div', { className: 'item', key: 'occupied' },\r\n                React.createElement('span', {\r\n                  style: { width: '12px', height: '12px', background: 'red', borderRadius: '50%', display: 'inline-block', marginRight: '6px' }\r\n                }), ' Occupied'\r\n              )\r\n            ]\r\n          ),\r\n          React.createElement(\r\n            'div',\r\n            { className: 'locker-grid', key: 'locker-grid' },\r\n            lockers.map((locker) =>\r\n              React.createElement(\r\n                'div',\r\n                {\r\n                  key: locker.id,\r\n                  className: `locker-tile ${locker.status}`,\r\n                  onClick: () => {\r\n                    setSelectedLockerId(locker.id);\r\n                    setShowAssignModal(true);\r\n                  }\r\n                },\r\n                [\r\n                  React.createElement('span', {\r\n                    key: 'icon',\r\n                    role: 'img',\r\n                    'aria-label': 'lock'\r\n                  }, locker.status === 'available' ? '🔓' : '🔒'),\r\n                  React.createElement('small', { key: 'id' }, locker.id)\r\n                ]\r\n              )\r\n            )\r\n          )\r\n        ]\r\n      )\r\n    );\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (selectedTab === 'Locker Management') {\r\n      return renderLockerManagement();\r\n    } else if (selectedTab === 'Staff') {\r\n      return React.createElement('div', {}, [\r\n        React.createElement('h2', { key: 'staff-title' }, 'Staff Management Page'),\r\n        React.createElement('p', { key: 'staff-desc' }, 'Staff details and management here.')\r\n      ]);\r\n    } else if (selectedTab === 'Parcel History') {\r\n      return React.createElement('div', {}, [\r\n        React.createElement('h2', { key: 'ph-title' }, 'Parcel History Page'),\r\n        React.createElement('p', { key: 'ph-desc' }, 'Parcel history and records here.')\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const modal = showAssignModal && React.createElement(\r\n    'div',\r\n    { className: 'modal-overlay' },\r\n    React.createElement(\r\n      'div',\r\n      { className: 'modal-content' },\r\n      [\r\n        React.createElement(\r\n          'h3',\r\n          { key: 'modal-title' },\r\n          ['Assign New Parcel to Locker', React.createElement('br', { key: 'br1' }), React.createElement('strong', { key: 'strong' }, selectedLockerId)]\r\n        ),\r\n        React.createElement('label', { key: 'label1' }, 'Recipient Name:'),\r\n        React.createElement('input', {\r\n          key: 'input1',\r\n          type: 'text',\r\n          placeholder: 'Enter recipient name'\r\n        }),\r\n        React.createElement('label', { key: 'label2' }, 'Phone Number:'),\r\n        React.createElement('input', {\r\n          key: 'input2',\r\n          type: 'text',\r\n          placeholder: 'Enter phone number'\r\n        }),\r\n        React.createElement('label', { key: 'label3' }, 'Product ID / Parcel Description:'),\r\n        React.createElement('input', {\r\n          key: 'input3',\r\n          type: 'text',\r\n          placeholder: 'Enter product ID or description'\r\n        }),\r\n        React.createElement(\r\n          'div',\r\n          { key: 'buttons', className: 'modal-buttons' },\r\n          [\r\n            React.createElement(\r\n              'button',\r\n              {\r\n                key: 'assign',\r\n                onClick: () => setShowAssignModal(false)\r\n              },\r\n              'Assign Parcel'\r\n            ),\r\n            React.createElement(\r\n              'button',\r\n              {\r\n                key: 'cancel',\r\n                onClick: () => setShowAssignModal(false)\r\n              },\r\n              'Cancel'\r\n            )\r\n          ]\r\n        )\r\n      ]\r\n    )\r\n  );\r\n\r\n  return React.createElement(\r\n    'div',\r\n    { className: 'dashboard-container' },\r\n    [\r\n      React.createElement(\r\n        'div',\r\n        { className: 'top-bar', key: 'top' },\r\n        [\r\n          React.createElement('div', { key: 'top1' }, 'Community Manager Dashboard'),\r\n          React.createElement('div', { key: 'top2' },\r\n            ['Community Name: ', React.createElement('strong', { key: 'name' }, communityName)]\r\n          )\r\n        ]\r\n      ),\r\n      React.createElement(\r\n        'div',\r\n        { className: 'tabs', key: 'tabs' },\r\n        ['Locker Management', 'Staff', 'Parcel History'].map((tab) =>\r\n          React.createElement(\r\n            'div',\r\n            {\r\n              key: tab,\r\n              className: `tab ${selectedTab === tab ? 'active' : ''}`,\r\n              onClick: () => setSelectedTab(tab),\r\n              style: { cursor: 'pointer' }\r\n            },\r\n            tab\r\n          )\r\n        )\r\n      ),\r\n      React.createElement(\r\n        'div',\r\n        { className: 'dashboard-content', key: 'content' },\r\n        [renderContent(), modal]\r\n      )\r\n    ]\r\n  );\r\n};\r\n\r\nexport default Dboard;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
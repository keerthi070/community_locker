{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nerel\\\\OneDrive\\\\Documents\\\\smartlocker\\\\src\\\\components\\\\Dboard.js\";\n/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [expandedBox, setExpandedBox] = useState(null);  // NEW\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const renderBoxes = () => {\r\n    const elements = [];\r\n    for (let i = 0; i < boxCount; i++) {\r\n      const boxId = `Box${i + 1}`;\r\n      const isExpanded = expandedBox === boxId;\r\n\r\n      elements.push(\r\n        <div key={boxId} className=\"locker-box\">\r\n          <div\r\n            className=\"box-title\"\r\n            onClick={() => toggleBox(boxId)}\r\n          >\r\n            {boxId}\r\n          </div>\r\n\r\n          {isExpanded && (\r\n            <div className=\"box-lockers\">\r\n              {Array.from({ length: lockersPerBox }, (_, j) => (\r\n                <div\r\n                  key={`${boxId}-L${j + 1}`}\r\n                  className=\"locker\"\r\n                  onClick={() => handleLockerClick(`${boxId}-L${j + 1}`)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n      <div className=\"lockers-grid\">{renderBoxes()}</div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange} />\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange} />\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange} />\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/\nimport React, { useEffect, useState } from 'react';\nimport './Dboard.css';\nconst Dboard = () => {\n  const [boxCount, setBoxCount] = useState(0);\n  const [lockersPerBox, setLockersPerBox] = useState(0);\n  const [selectedLocker, setSelectedLocker] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [parcelData, setParcelData] = useState({\n    recipientName: '',\n    phone: '',\n    productId: ''\n  });\n  const [currentBoxIndex, setCurrentBoxIndex] = useState(0);\n  const [expandedBox, setExpandedBox] = useState(null);\n  const [assignedLockers, setAssignedLockers] = useState({});\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\n  useEffect(() => {\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\n    setBoxCount(box);\n    setLockersPerBox(lockers);\n  }, []);\n  const handleLockerClick = lockerId => {\n    setSelectedLocker(lockerId);\n    setShowModal(true);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setParcelData({\n      ...parcelData,\n      [name]: value\n    });\n  };\n  const handleAssign = () => {\n    const {\n      recipientName,\n      phone,\n      productId\n    } = parcelData;\n    if (!recipientName.trim() || !phone.trim() || !productId.trim()) {\n      alert('Please fill in all fields before assigning the parcel.');\n      return;\n    }\n    setAssignedLockers(prev => ({\n      ...prev,\n      [selectedLocker]: true\n    }));\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\n    setShowModal(false);\n    setParcelData({\n      recipientName: '',\n      phone: '',\n      productId: ''\n    });\n  };\n  const toggleBox = boxId => {\n    setExpandedBox(expandedBox === boxId ? null : boxId);\n  };\n  const handlePrev = () => {\n    setCurrentBoxIndex(prev => (prev - 1 + boxCount) % boxCount);\n  };\n  const handleNext = () => {\n    setCurrentBoxIndex(prev => (prev + 1) % boxCount);\n  };\n  const renderCurrentBox = () => {\n    const boxId = `Box${currentBoxIndex + 1}`;\n    const isExpanded = expandedBox === boxId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"locker-box slide-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-title\",\n      onClick: () => toggleBox(boxId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, boxId), isExpanded && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-lockers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }\n    }, Array.from({\n      length: lockersPerBox\n    }, (_, j) => {\n      const lockerId = `${boxId}-L${j + 1}`;\n      const isAssigned = assignedLockers[lockerId];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: lockerId,\n        className: `locker ${isAssigned ? 'assigned' : 'unassigned'}`,\n        onClick: () => handleLockerClick(lockerId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      }, \"L\", j + 1);\n    })));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, \"Hello, \", adminName, \", Welcome to \", communityName, \" community!\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"legend-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"legend-box unassigned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }), \" Unassigned\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"legend-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"legend-box assigned\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }), \" Assigned\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"navigation-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePrev,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, '< Prev'), renderCurrentBox(), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, 'Next >')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, \"Retrieve Parcel\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, \"View Parcel History\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  }, \"Logout\")), showModal && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, \"Assign New Parcel to Locker \", selectedLocker), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, \"Recipient Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"recipientName\",\n    value: parcelData.recipientName,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, \"Phone Number:\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"phone\",\n    value: parcelData.phone,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, \"Product ID / Parcel Description:\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"productId\",\n    value: parcelData.productId,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAssign,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, \"Assign Parcel\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setShowModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, \"Cancel\"))));\n};\nexport default Dboard;","map":{"version":3,"names":["React","useEffect","useState","Dboard","boxCount","setBoxCount","lockersPerBox","setLockersPerBox","selectedLocker","setSelectedLocker","showModal","setShowModal","parcelData","setParcelData","recipientName","phone","productId","currentBoxIndex","setCurrentBoxIndex","expandedBox","setExpandedBox","assignedLockers","setAssignedLockers","communityName","localStorage","getItem","adminName","box","parseInt","lockers","handleLockerClick","lockerId","handleChange","e","name","value","target","handleAssign","trim","alert","prev","toggleBox","boxId","handlePrev","handleNext","renderCurrentBox","isExpanded","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","from","length","_","j","isAssigned","key","onChange"],"sources":["C:/Users/nerel/OneDrive/Documents/smartlocker/src/components/Dboard.js"],"sourcesContent":["/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [expandedBox, setExpandedBox] = useState(null);  // NEW\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const renderBoxes = () => {\r\n    const elements = [];\r\n    for (let i = 0; i < boxCount; i++) {\r\n      const boxId = `Box${i + 1}`;\r\n      const isExpanded = expandedBox === boxId;\r\n\r\n      elements.push(\r\n        <div key={boxId} className=\"locker-box\">\r\n          <div\r\n            className=\"box-title\"\r\n            onClick={() => toggleBox(boxId)}\r\n          >\r\n            {boxId}\r\n          </div>\r\n\r\n          {isExpanded && (\r\n            <div className=\"box-lockers\">\r\n              {Array.from({ length: lockersPerBox }, (_, j) => (\r\n                <div\r\n                  key={`${boxId}-L${j + 1}`}\r\n                  className=\"locker\"\r\n                  onClick={() => handleLockerClick(`${boxId}-L${j + 1}`)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n      <div className=\"lockers-grid\">{renderBoxes()}</div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange} />\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange} />\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange} />\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [currentBoxIndex, setCurrentBoxIndex] = useState(0);\r\n  const [expandedBox, setExpandedBox] = useState(null);\r\n  const [assignedLockers, setAssignedLockers] = useState({});\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    const { recipientName, phone, productId } = parcelData;\r\n\r\n    if (!recipientName.trim() || !phone.trim() || !productId.trim()) {\r\n      alert('Please fill in all fields before assigning the parcel.');\r\n      return;\r\n    }\r\n\r\n    setAssignedLockers((prev) => ({\r\n      ...prev,\r\n      [selectedLocker]: true,\r\n    }));\r\n\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setCurrentBoxIndex((prev) => (prev - 1 + boxCount) % boxCount);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentBoxIndex((prev) => (prev + 1) % boxCount);\r\n  };\r\n\r\n  const renderCurrentBox = () => {\r\n    const boxId = `Box${currentBoxIndex + 1}`;\r\n    const isExpanded = expandedBox === boxId;\r\n\r\n    return (\r\n      <div className=\"locker-box slide-in\">\r\n        <div className=\"box-title\" onClick={() => toggleBox(boxId)}>\r\n          {boxId}\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"box-lockers\">\r\n            {Array.from({ length: lockersPerBox }, (_, j) => {\r\n              const lockerId = `${boxId}-L${j + 1}`;\r\n              const isAssigned = assignedLockers[lockerId];\r\n\r\n              return (\r\n                <div\r\n                  key={lockerId}\r\n                  className={`locker ${isAssigned ? 'assigned' : 'unassigned'}`}\r\n                  onClick={() => handleLockerClick(lockerId)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n\r\n      <div className=\"legend\">\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box unassigned\"></div> Unassigned\r\n        </div>\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box assigned\"></div> Assigned\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navigation-buttons\">\r\n        <button onClick={handlePrev}>{'< Prev'}</button>\r\n        {renderCurrentBox()}\r\n        <button onClick={handleNext}>{'Next >'}</button>\r\n      </div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal\">\r\n        <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n        <label>Recipient Name:</label>\r\n        <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange} />\r\n\r\n        <label>Phone Number:</label>\r\n        <input name=\"phone\" value={parcelData.phone} onChange={handleChange} />\r\n\r\n        <label>Product ID / Parcel Description:</label>\r\n        <input name=\"productId\" value={parcelData.productId} onChange={handleChange} />\r\n\r\n        <button onClick={handleAssign}>Assign Parcel</button>\r\n        <button onClick={() => setShowModal(false)}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  )}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default Dboard;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
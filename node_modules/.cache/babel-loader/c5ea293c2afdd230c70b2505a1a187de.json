{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nerel\\\\OneDrive\\\\Documents\\\\smartlocker\\\\src\\\\components\\\\Dboard.js\";\n/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [expandedBox, setExpandedBox] = useState(null);  // NEW\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const renderBoxes = () => {\r\n    const elements = [];\r\n    for (let i = 0; i < boxCount; i++) {\r\n      const boxId = `Box${i + 1}`;\r\n      const isExpanded = expandedBox === boxId;\r\n\r\n      elements.push(\r\n        <div key={boxId} className=\"locker-box\">\r\n          <div\r\n            className=\"box-title\"\r\n            onClick={() => toggleBox(boxId)}\r\n          >\r\n            {boxId}\r\n          </div>\r\n\r\n          {isExpanded && (\r\n            <div className=\"box-lockers\">\r\n              {Array.from({ length: lockersPerBox }, (_, j) => (\r\n                <div\r\n                  key={`${boxId}-L${j + 1}`}\r\n                  className=\"locker\"\r\n                  onClick={() => handleLockerClick(`${boxId}-L${j + 1}`)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n      <div className=\"lockers-grid\">{renderBoxes()}</div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange} />\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange} />\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange} />\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/\n/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [currentBoxIndex, setCurrentBoxIndex] = useState(0);\r\n  const [expandedBox, setExpandedBox] = useState(null);\r\n  const [assignedLockers, setAssignedLockers] = useState({});\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    const { recipientName, phone, productId } = parcelData;\r\n\r\n    if (!recipientName.trim() || !phone.trim() || !productId.trim()) {\r\n      alert('Please fill in all fields before assigning the parcel.');\r\n      return;\r\n    }\r\n\r\n    setAssignedLockers((prev) => ({\r\n      ...prev,\r\n      [selectedLocker]: true,\r\n    }));\r\n\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setCurrentBoxIndex((prev) => (prev - 1 + boxCount) % boxCount);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentBoxIndex((prev) => (prev + 1) % boxCount);\r\n  };\r\n\r\n  const renderCurrentBox = () => {\r\n    const boxId = `Box${currentBoxIndex + 1}`;\r\n    const isExpanded = expandedBox === boxId;\r\n\r\n    return (\r\n      <div className=\"locker-box slide-in\">\r\n        <div className=\"box-title\" onClick={() => toggleBox(boxId)}>\r\n          {boxId}\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"box-lockers\">\r\n            {Array.from({ length: lockersPerBox }, (_, j) => {\r\n              const lockerId = `${boxId}-L${j + 1}`;\r\n              const isAssigned = assignedLockers[lockerId];\r\n\r\n              return (\r\n                <div\r\n                  key={lockerId}\r\n                  className={`locker ${isAssigned ? 'assigned' : 'unassigned'}`}\r\n                  onClick={() => handleLockerClick(lockerId)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n\r\n      <div className=\"legend\">\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box unassigned\"></div> Unassigned\r\n        </div>\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box assigned\"></div> Assigned\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navigation-buttons\">\r\n        <button onClick={handlePrev}>{'< Prev'}</button>\r\n        {renderCurrentBox()}\r\n        <button onClick={handleNext}>{'Next >'}</button>\r\n      </div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange}/>\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange}/>\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange}/>\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard; */\n\n// src/components/Dboard.jsx\n/*import React, { useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [selectedSystem, setSelectedSystem] = useState('Main Building');\r\n\r\n  const systems = [\r\n    { name: 'Main Building', location: 'Lobby' },\r\n    { name: 'Residence Hall', location: 'First Floor' },\r\n    { name: 'Gym', location: 'Entrance' }\r\n  ];\r\n\r\n  const lockers = Array.from({ length: 18 }, (_, i) => {\r\n    const row = Math.floor(i / 6) + 1;\r\n    const col = (i % 6) + 1;\r\n    return {\r\n      id: `0${row}-0${col}`,\r\n      status: 'available'\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"top-bar\">\r\n        <div>Community Manager Dashboard</div>\r\n        <div>Community ID: <strong>COM001</strong></div>\r\n      </div>\r\n\r\n      <div className=\"tabs\">\r\n        <div className=\"tab active\">Locker Management</div>\r\n        <div className=\"tab\">Staff</div>\r\n        <div className=\"tab\">Residents <span className=\"badge\">2</span></div>\r\n        <div className=\"tab\">Parcel History</div>\r\n      </div>\r\n\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"left-panel\">\r\n          <h3>Locker Systems</h3>\r\n          <p>Manage your locker systems for community COM001</p>\r\n          {systems.map((system, index) => (\r\n            <div\r\n              key={index}\r\n              className={`system-entry ${selectedSystem === system.name ? 'selected' : ''}`}\r\n              onClick={() => setSelectedSystem(system.name)}\r\n            >\r\n              {system.name}<br />\r\n              <small>{system.location}</small>\r\n            </div>\r\n          ))}\r\n          <button className=\"add-button\">+ Add System</button>\r\n        </div>\r\n\r\n        <div className=\"right-panel\">\r\n          <h2>{selectedSystem}</h2>\r\n          <p>{systems.find(sys => sys.name === selectedSystem)?.location} - {selectedSystem} lockers</p>\r\n\r\n          <div>\r\n            <button className=\"add-button\">+ Add Lockers</button>\r\n            <button className=\"add-button\" style={{ backgroundColor: '#ffdddd', color: 'red' }}>– Remove Lockers</button>\r\n            <button className=\"add-button\" style={{ float: 'right' }}>📦 Store Package</button>\r\n          </div>\r\n\r\n          <div className=\"status-legend\">\r\n            <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'green', borderRadius: '50%' }}></span> Available</div>\r\n            <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'red', borderRadius: '50%' }}></span> Occupied</div>\r\n          </div>\r\n\r\n          <div className=\"locker-grid\">\r\n            {lockers.map((locker) => (\r\n              <div className={`locker-tile ${locker.status}`} key={locker.id}>\r\n                <span role=\"img\" aria-label=\"lock\">{locker.status === 'available' ? '🔓' : '🔒'}</span>\r\n                <small>{locker.id}</small>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/\n// src/components/Dboard.jsx\nimport React, { useState } from 'react';\nimport './Dboard.css';\nconst Dboard = () => {\n  const [selectedSystem, setSelectedSystem] = useState('Main Building');\n  const [selectedTab, setSelectedTab] = useState('Locker Management'); // default tab\n\n  const communityName = localStorage.getItem('communityName') || 'COM001';\n  const systems = [{\n    name: 'Main Building',\n    location: 'Lobby'\n  }];\n  const lockers = Array.from({\n    length: 18\n  }, (_, i) => {\n    const row = Math.floor(i / 6) + 1;\n    const col = i % 6 + 1;\n    return {\n      id: `0${row}-0${col}`,\n      status: 'available'\n    };\n  });\n  const renderContent = () => {\n    if (selectedTab === 'Locker Management') {\n      var _systems$find;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }\n      }, \"Locker Systems\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }\n      }, \"Manage your locker systems for community \", communityName), systems.map((system, index) => /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: `system-entry ${selectedSystem === system.name ? 'selected' : ''}`,\n        onClick: () => setSelectedSystem(system.name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 15\n        }\n      }, system.name, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 30\n        }\n      }), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 17\n        }\n      }, system.location))), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"add-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }\n      }, \"+ Add System\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"right-panel\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }\n      }, selectedSystem), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }\n      }, (_systems$find = systems.find(sys => sys.name === selectedSystem)) === null || _systems$find === void 0 ? void 0 : _systems$find.location, \" - \", selectedSystem, \" lockers\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"add-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 15\n        }\n      }, \"+ Add Lockers\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"add-button\",\n        style: {\n          backgroundColor: '#ffdddd',\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }\n      }, \"\\u2013 Remove Lockers\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"add-button\",\n        style: {\n          float: 'right'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 15\n        }\n      }, \"\\uD83D\\uDCE6 Store Package\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"status-legend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          width: '12px',\n          height: '12px',\n          background: 'green',\n          borderRadius: '50%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 37\n        }\n      }), \" Available\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          width: '12px',\n          height: '12px',\n          background: 'red',\n          borderRadius: '50%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 37\n        }\n      }), \" Occupied\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"locker-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }\n      }, lockers.map(locker => /*#__PURE__*/React.createElement(\"div\", {\n        className: `locker-tile ${locker.status}`,\n        key: locker.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"lock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 19\n        }\n      }, locker.status === 'available' ? '🔓' : '🔒'), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 19\n        }\n      }, locker.id))))));\n    } else if (selectedTab === 'Staff') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 19\n        }\n      }, \"Staff Management Page\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 49\n        }\n      }, \"Staff details and management here.\"));\n    } else if (selectedTab === 'Parcel History') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 19\n        }\n      }, \"Parcel History Page\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 47\n        }\n      }, \"Parcel history and records here.\"));\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 9\n    }\n  }, \"Community Manager Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 9\n    }\n  }, \"Community Name: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 30\n    }\n  }, communityName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tabs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }\n  }, ['Locker Management', 'Staff', 'Parcel History'].map(tab => /*#__PURE__*/React.createElement(\"div\", {\n    key: tab,\n    className: `tab ${selectedTab === tab ? 'active' : ''}`,\n    onClick: () => setSelectedTab(tab),\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 11\n    }\n  }, tab))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }\n  }, renderContent()));\n};\nexport default Dboard;","map":{"version":3,"names":["React","useState","Dboard","selectedSystem","setSelectedSystem","selectedTab","setSelectedTab","communityName","localStorage","getItem","systems","name","location","lockers","Array","from","length","_","i","row","Math","floor","col","id","status","renderContent","_systems$find","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","system","index","key","onClick","find","sys","style","backgroundColor","color","float","width","height","background","borderRadius","locker","role","tab","cursor"],"sources":["C:/Users/nerel/OneDrive/Documents/smartlocker/src/components/Dboard.js"],"sourcesContent":["\r\n/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [expandedBox, setExpandedBox] = useState(null);  // NEW\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const renderBoxes = () => {\r\n    const elements = [];\r\n    for (let i = 0; i < boxCount; i++) {\r\n      const boxId = `Box${i + 1}`;\r\n      const isExpanded = expandedBox === boxId;\r\n\r\n      elements.push(\r\n        <div key={boxId} className=\"locker-box\">\r\n          <div\r\n            className=\"box-title\"\r\n            onClick={() => toggleBox(boxId)}\r\n          >\r\n            {boxId}\r\n          </div>\r\n\r\n          {isExpanded && (\r\n            <div className=\"box-lockers\">\r\n              {Array.from({ length: lockersPerBox }, (_, j) => (\r\n                <div\r\n                  key={`${boxId}-L${j + 1}`}\r\n                  className=\"locker\"\r\n                  onClick={() => handleLockerClick(`${boxId}-L${j + 1}`)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n      <div className=\"lockers-grid\">{renderBoxes()}</div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange} />\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange} />\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange} />\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/\r\n/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [currentBoxIndex, setCurrentBoxIndex] = useState(0);\r\n  const [expandedBox, setExpandedBox] = useState(null);\r\n  const [assignedLockers, setAssignedLockers] = useState({});\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    const { recipientName, phone, productId } = parcelData;\r\n\r\n    if (!recipientName.trim() || !phone.trim() || !productId.trim()) {\r\n      alert('Please fill in all fields before assigning the parcel.');\r\n      return;\r\n    }\r\n\r\n    setAssignedLockers((prev) => ({\r\n      ...prev,\r\n      [selectedLocker]: true,\r\n    }));\r\n\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setCurrentBoxIndex((prev) => (prev - 1 + boxCount) % boxCount);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentBoxIndex((prev) => (prev + 1) % boxCount);\r\n  };\r\n\r\n  const renderCurrentBox = () => {\r\n    const boxId = `Box${currentBoxIndex + 1}`;\r\n    const isExpanded = expandedBox === boxId;\r\n\r\n    return (\r\n      <div className=\"locker-box slide-in\">\r\n        <div className=\"box-title\" onClick={() => toggleBox(boxId)}>\r\n          {boxId}\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"box-lockers\">\r\n            {Array.from({ length: lockersPerBox }, (_, j) => {\r\n              const lockerId = `${boxId}-L${j + 1}`;\r\n              const isAssigned = assignedLockers[lockerId];\r\n\r\n              return (\r\n                <div\r\n                  key={lockerId}\r\n                  className={`locker ${isAssigned ? 'assigned' : 'unassigned'}`}\r\n                  onClick={() => handleLockerClick(lockerId)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n\r\n      <div className=\"legend\">\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box unassigned\"></div> Unassigned\r\n        </div>\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box assigned\"></div> Assigned\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navigation-buttons\">\r\n        <button onClick={handlePrev}>{'< Prev'}</button>\r\n        {renderCurrentBox()}\r\n        <button onClick={handleNext}>{'Next >'}</button>\r\n      </div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange}/>\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange}/>\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange}/>\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard; */\r\n\r\n// src/components/Dboard.jsx\r\n/*import React, { useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [selectedSystem, setSelectedSystem] = useState('Main Building');\r\n\r\n  const systems = [\r\n    { name: 'Main Building', location: 'Lobby' },\r\n    { name: 'Residence Hall', location: 'First Floor' },\r\n    { name: 'Gym', location: 'Entrance' }\r\n  ];\r\n\r\n  const lockers = Array.from({ length: 18 }, (_, i) => {\r\n    const row = Math.floor(i / 6) + 1;\r\n    const col = (i % 6) + 1;\r\n    return {\r\n      id: `0${row}-0${col}`,\r\n      status: 'available'\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"top-bar\">\r\n        <div>Community Manager Dashboard</div>\r\n        <div>Community ID: <strong>COM001</strong></div>\r\n      </div>\r\n\r\n      <div className=\"tabs\">\r\n        <div className=\"tab active\">Locker Management</div>\r\n        <div className=\"tab\">Staff</div>\r\n        <div className=\"tab\">Residents <span className=\"badge\">2</span></div>\r\n        <div className=\"tab\">Parcel History</div>\r\n      </div>\r\n\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"left-panel\">\r\n          <h3>Locker Systems</h3>\r\n          <p>Manage your locker systems for community COM001</p>\r\n          {systems.map((system, index) => (\r\n            <div\r\n              key={index}\r\n              className={`system-entry ${selectedSystem === system.name ? 'selected' : ''}`}\r\n              onClick={() => setSelectedSystem(system.name)}\r\n            >\r\n              {system.name}<br />\r\n              <small>{system.location}</small>\r\n            </div>\r\n          ))}\r\n          <button className=\"add-button\">+ Add System</button>\r\n        </div>\r\n\r\n        <div className=\"right-panel\">\r\n          <h2>{selectedSystem}</h2>\r\n          <p>{systems.find(sys => sys.name === selectedSystem)?.location} - {selectedSystem} lockers</p>\r\n\r\n          <div>\r\n            <button className=\"add-button\">+ Add Lockers</button>\r\n            <button className=\"add-button\" style={{ backgroundColor: '#ffdddd', color: 'red' }}>– Remove Lockers</button>\r\n            <button className=\"add-button\" style={{ float: 'right' }}>📦 Store Package</button>\r\n          </div>\r\n\r\n          <div className=\"status-legend\">\r\n            <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'green', borderRadius: '50%' }}></span> Available</div>\r\n            <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'red', borderRadius: '50%' }}></span> Occupied</div>\r\n          </div>\r\n\r\n          <div className=\"locker-grid\">\r\n            {lockers.map((locker) => (\r\n              <div className={`locker-tile ${locker.status}`} key={locker.id}>\r\n                <span role=\"img\" aria-label=\"lock\">{locker.status === 'available' ? '🔓' : '🔒'}</span>\r\n                <small>{locker.id}</small>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/\r\n// src/components/Dboard.jsx\r\nimport React, { useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [selectedSystem, setSelectedSystem] = useState('Main Building');\r\n  const [selectedTab, setSelectedTab] = useState('Locker Management'); // default tab\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'COM001';\r\n\r\n  const systems = [\r\n    { name: 'Main Building', location: 'Lobby' },\r\n  ];\r\n\r\n  const lockers = Array.from({ length: 18 }, (_, i) => {\r\n    const row = Math.floor(i / 6) + 1;\r\n    const col = (i % 6) + 1;\r\n    return {\r\n      id: `0${row}-0${col}`,\r\n      status: 'available'\r\n    };\r\n  });\r\n\r\n  const renderContent = () => {\r\n    if (selectedTab === 'Locker Management') {\r\n      return (\r\n        <>\r\n          <div className=\"left-panel\">\r\n            <h3>Locker Systems</h3>\r\n            <p>Manage your locker systems for community {communityName}</p>\r\n            {systems.map((system, index) => (\r\n              <div\r\n                key={index}\r\n                className={`system-entry ${selectedSystem === system.name ? 'selected' : ''}`}\r\n                onClick={() => setSelectedSystem(system.name)}\r\n              >\r\n                {system.name}<br />\r\n                <small>{system.location}</small>\r\n              </div>\r\n            ))}\r\n            <button className=\"add-button\">+ Add System</button>\r\n          </div>\r\n\r\n          <div className=\"right-panel\">\r\n            <h2>{selectedSystem}</h2>\r\n            <p>{systems.find(sys => sys.name === selectedSystem)?.location} - {selectedSystem} lockers</p>\r\n\r\n            <div>\r\n              <button className=\"add-button\">+ Add Lockers</button>\r\n              <button className=\"add-button\" style={{ backgroundColor: '#ffdddd', color: 'red' }}>– Remove Lockers</button>\r\n              <button className=\"add-button\" style={{ float: 'right' }}>📦 Store Package</button>\r\n            </div>\r\n\r\n            <div className=\"status-legend\">\r\n              <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'green', borderRadius: '50%' }}></span> Available</div>\r\n              <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'red', borderRadius: '50%' }}></span> Occupied</div>\r\n            </div>\r\n\r\n            <div className=\"locker-grid\">\r\n              {lockers.map((locker) => (\r\n                <div className={`locker-tile ${locker.status}`} key={locker.id}>\r\n                  <span role=\"img\" aria-label=\"lock\">{locker.status === 'available' ? '🔓' : '🔒'}</span>\r\n                  <small>{locker.id}</small>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } \r\n    else if (selectedTab === 'Staff') {\r\n      return <div><h2>Staff Management Page</h2><p>Staff details and management here.</p></div>;\r\n    }\r\n    else if (selectedTab === 'Parcel History') {\r\n      return <div><h2>Parcel History Page</h2><p>Parcel history and records here.</p></div>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"top-bar\">\r\n        <div>Community Manager Dashboard</div>\r\n        <div>Community Name: <strong>{communityName}</strong></div>\r\n      </div>\r\n\r\n      <div className=\"tabs\">\r\n        {['Locker Management', 'Staff', 'Parcel History'].map((tab) => (\r\n          <div \r\n            key={tab} \r\n            className={`tab ${selectedTab === tab ? 'active' : ''}`} \r\n            onClick={() => setSelectedTab(tab)}\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            {tab}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"dashboard-content\">\r\n        {renderContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\n/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [expandedBox, setExpandedBox] = useState(null);  // NEW\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const renderBoxes = () => {\r\n    const elements = [];\r\n    for (let i = 0; i < boxCount; i++) {\r\n      const boxId = `Box${i + 1}`;\r\n      const isExpanded = expandedBox === boxId;\r\n\r\n      elements.push(\r\n        <div key={boxId} className=\"locker-box\">\r\n          <div\r\n            className=\"box-title\"\r\n            onClick={() => toggleBox(boxId)}\r\n          >\r\n            {boxId}\r\n          </div>\r\n\r\n          {isExpanded && (\r\n            <div className=\"box-lockers\">\r\n              {Array.from({ length: lockersPerBox }, (_, j) => (\r\n                <div\r\n                  key={`${boxId}-L${j + 1}`}\r\n                  className=\"locker\"\r\n                  onClick={() => handleLockerClick(`${boxId}-L${j + 1}`)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n      <div className=\"lockers-grid\">{renderBoxes()}</div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange} />\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange} />\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange} />\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/\n/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [currentBoxIndex, setCurrentBoxIndex] = useState(0);\r\n  const [expandedBox, setExpandedBox] = useState(null);\r\n  const [assignedLockers, setAssignedLockers] = useState({});\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    const { recipientName, phone, productId } = parcelData;\r\n\r\n    if (!recipientName.trim() || !phone.trim() || !productId.trim()) {\r\n      alert('Please fill in all fields before assigning the parcel.');\r\n      return;\r\n    }\r\n\r\n    setAssignedLockers((prev) => ({\r\n      ...prev,\r\n      [selectedLocker]: true,\r\n    }));\r\n\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setCurrentBoxIndex((prev) => (prev - 1 + boxCount) % boxCount);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentBoxIndex((prev) => (prev + 1) % boxCount);\r\n  };\r\n\r\n  const renderCurrentBox = () => {\r\n    const boxId = `Box${currentBoxIndex + 1}`;\r\n    const isExpanded = expandedBox === boxId;\r\n\r\n    return (\r\n      <div className=\"locker-box slide-in\">\r\n        <div className=\"box-title\" onClick={() => toggleBox(boxId)}>\r\n          {boxId}\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"box-lockers\">\r\n            {Array.from({ length: lockersPerBox }, (_, j) => {\r\n              const lockerId = `${boxId}-L${j + 1}`;\r\n              const isAssigned = assignedLockers[lockerId];\r\n\r\n              return (\r\n                <div\r\n                  key={lockerId}\r\n                  className={`locker ${isAssigned ? 'assigned' : 'unassigned'}`}\r\n                  onClick={() => handleLockerClick(lockerId)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n\r\n      <div className=\"legend\">\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box unassigned\"></div> Unassigned\r\n        </div>\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box assigned\"></div> Assigned\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navigation-buttons\">\r\n        <button onClick={handlePrev}>{'< Prev'}</button>\r\n        {renderCurrentBox()}\r\n        <button onClick={handleNext}>{'Next >'}</button>\r\n      </div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange}/>\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange}/>\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange}/>\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard; */\n\n// src/components/Dboard.jsx\n/*import React, { useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [selectedSystem, setSelectedSystem] = useState('Main Building');\r\n\r\n  const systems = [\r\n    { name: 'Main Building', location: 'Lobby' },\r\n    { name: 'Residence Hall', location: 'First Floor' },\r\n    { name: 'Gym', location: 'Entrance' }\r\n  ];\r\n\r\n  const lockers = Array.from({ length: 18 }, (_, i) => {\r\n    const row = Math.floor(i / 6) + 1;\r\n    const col = (i % 6) + 1;\r\n    return {\r\n      id: `0${row}-0${col}`,\r\n      status: 'available'\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"top-bar\">\r\n        <div>Community Manager Dashboard</div>\r\n        <div>Community ID: <strong>COM001</strong></div>\r\n      </div>\r\n\r\n      <div className=\"tabs\">\r\n        <div className=\"tab active\">Locker Management</div>\r\n        <div className=\"tab\">Staff</div>\r\n        <div className=\"tab\">Residents <span className=\"badge\">2</span></div>\r\n        <div className=\"tab\">Parcel History</div>\r\n      </div>\r\n\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"left-panel\">\r\n          <h3>Locker Systems</h3>\r\n          <p>Manage your locker systems for community COM001</p>\r\n          {systems.map((system, index) => (\r\n            <div\r\n              key={index}\r\n              className={`system-entry ${selectedSystem === system.name ? 'selected' : ''}`}\r\n              onClick={() => setSelectedSystem(system.name)}\r\n            >\r\n              {system.name}<br />\r\n              <small>{system.location}</small>\r\n            </div>\r\n          ))}\r\n          <button className=\"add-button\">+ Add System</button>\r\n        </div>\r\n\r\n        <div className=\"right-panel\">\r\n          <h2>{selectedSystem}</h2>\r\n          <p>{systems.find(sys => sys.name === selectedSystem)?.location} - {selectedSystem} lockers</p>\r\n\r\n          <div>\r\n            <button className=\"add-button\">+ Add Lockers</button>\r\n            <button className=\"add-button\" style={{ backgroundColor: '#ffdddd', color: 'red' }}>– Remove Lockers</button>\r\n            <button className=\"add-button\" style={{ float: 'right' }}>📦 Store Package</button>\r\n          </div>\r\n\r\n          <div className=\"status-legend\">\r\n            <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'green', borderRadius: '50%' }}></span> Available</div>\r\n            <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'red', borderRadius: '50%' }}></span> Occupied</div>\r\n          </div>\r\n\r\n          <div className=\"locker-grid\">\r\n            {lockers.map((locker) => (\r\n              <div className={`locker-tile ${locker.status}`} key={locker.id}>\r\n                <span role=\"img\" aria-label=\"lock\">{locker.status === 'available' ? '🔓' : '🔒'}</span>\r\n                <small>{locker.id}</small>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/","map":{"version":3,"names":[],"sources":["C:/Users/nerel/OneDrive/Documents/smartlocker/src/components/Dboard.js"],"sourcesContent":["\r\n/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [expandedBox, setExpandedBox] = useState(null);  // NEW\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const renderBoxes = () => {\r\n    const elements = [];\r\n    for (let i = 0; i < boxCount; i++) {\r\n      const boxId = `Box${i + 1}`;\r\n      const isExpanded = expandedBox === boxId;\r\n\r\n      elements.push(\r\n        <div key={boxId} className=\"locker-box\">\r\n          <div\r\n            className=\"box-title\"\r\n            onClick={() => toggleBox(boxId)}\r\n          >\r\n            {boxId}\r\n          </div>\r\n\r\n          {isExpanded && (\r\n            <div className=\"box-lockers\">\r\n              {Array.from({ length: lockersPerBox }, (_, j) => (\r\n                <div\r\n                  key={`${boxId}-L${j + 1}`}\r\n                  className=\"locker\"\r\n                  onClick={() => handleLockerClick(`${boxId}-L${j + 1}`)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return elements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n      <div className=\"lockers-grid\">{renderBoxes()}</div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange} />\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange} />\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange} />\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/\r\n/*import React, { useEffect, useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [boxCount, setBoxCount] = useState(0);\r\n  const [lockersPerBox, setLockersPerBox] = useState(0);\r\n  const [selectedLocker, setSelectedLocker] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [parcelData, setParcelData] = useState({\r\n    recipientName: '',\r\n    phone: '',\r\n    productId: '',\r\n  });\r\n  const [currentBoxIndex, setCurrentBoxIndex] = useState(0);\r\n  const [expandedBox, setExpandedBox] = useState(null);\r\n  const [assignedLockers, setAssignedLockers] = useState({});\r\n\r\n  const communityName = localStorage.getItem('communityName') || 'Default Hostel';\r\n  const adminName = localStorage.getItem('adminName') || 'Default Watchman';\r\n\r\n  useEffect(() => {\r\n    const box = parseInt(localStorage.getItem('boxCount')) || 1;\r\n    const lockers = parseInt(localStorage.getItem('lockersPerBox')) || 1;\r\n    setBoxCount(box);\r\n    setLockersPerBox(lockers);\r\n  }, []);\r\n\r\n  const handleLockerClick = (lockerId) => {\r\n    setSelectedLocker(lockerId);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setParcelData({ ...parcelData, [name]: value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    const { recipientName, phone, productId } = parcelData;\r\n\r\n    if (!recipientName.trim() || !phone.trim() || !productId.trim()) {\r\n      alert('Please fill in all fields before assigning the parcel.');\r\n      return;\r\n    }\r\n\r\n    setAssignedLockers((prev) => ({\r\n      ...prev,\r\n      [selectedLocker]: true,\r\n    }));\r\n\r\n    alert(`Parcel assigned to ${selectedLocker} for ${parcelData.recipientName}`);\r\n    setShowModal(false);\r\n    setParcelData({ recipientName: '', phone: '', productId: '' });\r\n  };\r\n\r\n  const toggleBox = (boxId) => {\r\n    setExpandedBox(expandedBox === boxId ? null : boxId);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    setCurrentBoxIndex((prev) => (prev - 1 + boxCount) % boxCount);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentBoxIndex((prev) => (prev + 1) % boxCount);\r\n  };\r\n\r\n  const renderCurrentBox = () => {\r\n    const boxId = `Box${currentBoxIndex + 1}`;\r\n    const isExpanded = expandedBox === boxId;\r\n\r\n    return (\r\n      <div className=\"locker-box slide-in\">\r\n        <div className=\"box-title\" onClick={() => toggleBox(boxId)}>\r\n          {boxId}\r\n        </div>\r\n        {isExpanded && (\r\n          <div className=\"box-lockers\">\r\n            {Array.from({ length: lockersPerBox }, (_, j) => {\r\n              const lockerId = `${boxId}-L${j + 1}`;\r\n              const isAssigned = assignedLockers[lockerId];\r\n\r\n              return (\r\n                <div\r\n                  key={lockerId}\r\n                  className={`locker ${isAssigned ? 'assigned' : 'unassigned'}`}\r\n                  onClick={() => handleLockerClick(lockerId)}\r\n                >\r\n                  L{j + 1}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h2>Hello, {adminName}, Welcome to {communityName} community!</h2>\r\n\r\n      <div className=\"legend\">\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box unassigned\"></div> Unassigned\r\n        </div>\r\n        <div className=\"legend-item\">\r\n          <div className=\"legend-box assigned\"></div> Assigned\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"navigation-buttons\">\r\n        <button onClick={handlePrev}>{'< Prev'}</button>\r\n        {renderCurrentBox()}\r\n        <button onClick={handleNext}>{'Next >'}</button>\r\n      </div>\r\n\r\n      <div className=\"dashboard-buttons\">\r\n        <button>Retrieve Parcel</button>\r\n        <button>View Parcel History</button>\r\n        <button>Logout</button>\r\n      </div>\r\n\r\n      {showModal && (\r\n        <div className=\"modal-overlay\">\r\n          <div className=\"modal\">\r\n            <h3>Assign New Parcel to Locker {selectedLocker}</h3>\r\n            <label>Recipient Name:</label>\r\n            <input name=\"recipientName\" value={parcelData.recipientName} onChange={handleChange}/>\r\n\r\n            <label>Phone Number:</label>\r\n            <input name=\"phone\" value={parcelData.phone} onChange={handleChange}/>\r\n\r\n            <label>Product ID / Parcel Description:</label>\r\n            <input name=\"productId\" value={parcelData.productId} onChange={handleChange}/>\r\n\r\n            <button onClick={handleAssign}>Assign Parcel</button>\r\n            <button onClick={() => setShowModal(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard; */\r\n\r\n// src/components/Dboard.jsx\r\n/*import React, { useState } from 'react';\r\nimport './Dboard.css';\r\n\r\nconst Dboard = () => {\r\n  const [selectedSystem, setSelectedSystem] = useState('Main Building');\r\n\r\n  const systems = [\r\n    { name: 'Main Building', location: 'Lobby' },\r\n    { name: 'Residence Hall', location: 'First Floor' },\r\n    { name: 'Gym', location: 'Entrance' }\r\n  ];\r\n\r\n  const lockers = Array.from({ length: 18 }, (_, i) => {\r\n    const row = Math.floor(i / 6) + 1;\r\n    const col = (i % 6) + 1;\r\n    return {\r\n      id: `0${row}-0${col}`,\r\n      status: 'available'\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"top-bar\">\r\n        <div>Community Manager Dashboard</div>\r\n        <div>Community ID: <strong>COM001</strong></div>\r\n      </div>\r\n\r\n      <div className=\"tabs\">\r\n        <div className=\"tab active\">Locker Management</div>\r\n        <div className=\"tab\">Staff</div>\r\n        <div className=\"tab\">Residents <span className=\"badge\">2</span></div>\r\n        <div className=\"tab\">Parcel History</div>\r\n      </div>\r\n\r\n      <div className=\"dashboard-content\">\r\n        <div className=\"left-panel\">\r\n          <h3>Locker Systems</h3>\r\n          <p>Manage your locker systems for community COM001</p>\r\n          {systems.map((system, index) => (\r\n            <div\r\n              key={index}\r\n              className={`system-entry ${selectedSystem === system.name ? 'selected' : ''}`}\r\n              onClick={() => setSelectedSystem(system.name)}\r\n            >\r\n              {system.name}<br />\r\n              <small>{system.location}</small>\r\n            </div>\r\n          ))}\r\n          <button className=\"add-button\">+ Add System</button>\r\n        </div>\r\n\r\n        <div className=\"right-panel\">\r\n          <h2>{selectedSystem}</h2>\r\n          <p>{systems.find(sys => sys.name === selectedSystem)?.location} - {selectedSystem} lockers</p>\r\n\r\n          <div>\r\n            <button className=\"add-button\">+ Add Lockers</button>\r\n            <button className=\"add-button\" style={{ backgroundColor: '#ffdddd', color: 'red' }}>– Remove Lockers</button>\r\n            <button className=\"add-button\" style={{ float: 'right' }}>📦 Store Package</button>\r\n          </div>\r\n\r\n          <div className=\"status-legend\">\r\n            <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'green', borderRadius: '50%' }}></span> Available</div>\r\n            <div className=\"item\"><span style={{ width: '12px', height: '12px', background: 'red', borderRadius: '50%' }}></span> Occupied</div>\r\n          </div>\r\n\r\n          <div className=\"locker-grid\">\r\n            {lockers.map((locker) => (\r\n              <div className={`locker-tile ${locker.status}`} key={locker.id}>\r\n                <span role=\"img\" aria-label=\"lock\">{locker.status === 'available' ? '🔓' : '🔒'}</span>\r\n                <small>{locker.id}</small>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dboard;*/"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React, { useState } from \"react\";\nimport './Modal.css';\nconst AssignParcelModal = ({\n  lockerId,\n  onClose\n}) => {\n  const [formData, setFormData] = useState({\n    recipientName: \"\",\n    phone: \"\",\n    productId: \"\"\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAssign = () => {\n    const {\n      recipientName,\n      phone,\n      productId\n    } = formData;\n    if (!recipientName || !phone || !productId) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n    alert(`Assigned to ${recipientName} in ${lockerId}`);\n    onClose();\n  };\n  return React.createElement(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-30 flex justify-center items-center z-50\"\n  }, React.createElement(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md w-[400px]\"\n  }, React.createElement(\"h2\", {\n    className: \"text-xl font-bold text-center mb-4\"\n  }, `Assign New Parcel to ${lockerId}`), React.createElement(\"form\", {\n    className: \"space-y-4\"\n  }, React.createElement(\"div\", null, React.createElement(\"label\", {\n    className: \"block mb-1\"\n  }, \"Recipient Name:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"recipientName\",\n    className: \"w-full border rounded px-3 py-1\",\n    onChange: handleChange\n  })), React.createElement(\"div\", null, React.createElement(\"label\", {\n    className: \"block mb-1\"\n  }, \"Phone Number:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    className: \"w-full border rounded px-3 py-1\",\n    onChange: handleChange\n  })), React.createElement(\"div\", null, React.createElement(\"label\", {\n    className: \"block mb-1\"\n  }, \"Product ID / Description:\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"productId\",\n    className: \"w-full border rounded px-3 py-1\",\n    onChange: handleChange\n  })), React.createElement(\"div\", {\n    className: \"flex justify-end pt-4 gap-2\"\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleAssign,\n    className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\"\n  }, \"Assign Parcel\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClose,\n    className: \"bg-gray-300 px-4 py-2 rounded\"\n  }, \"Cancel\")))));\n};\nexport default AssignParcelModal;","map":{"version":3,"names":["React","useState","AssignParcelModal","lockerId","onClose","formData","setFormData","recipientName","phone","productId","handleChange","e","target","name","value","handleAssign","alert","createElement","className","type","onChange","onClick"],"sources":["C:/Users/nerel/OneDrive/Documents/smartlocker/src/components/AssignParcelModal.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './Modal.css';\r\n\r\nconst AssignParcelModal = ({ lockerId, onClose }) => {\r\n  const [formData, setFormData] = useState({\r\n    recipientName: \"\",\r\n    phone: \"\",\r\n    productId: \"\",\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAssign = () => {\r\n    const { recipientName, phone, productId } = formData;\r\n    if (!recipientName || !phone || !productId) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n    alert(`Assigned to ${recipientName} in ${lockerId}`);\r\n    onClose();\r\n  };\r\n\r\n  return React.createElement(\r\n    \"div\",\r\n    { className: \"fixed inset-0 bg-black bg-opacity-30 flex justify-center items-center z-50\" },\r\n    React.createElement(\r\n      \"div\",\r\n      { className: \"bg-white p-6 rounded-lg shadow-md w-[400px]\" },\r\n      React.createElement(\r\n        \"h2\",\r\n        { className: \"text-xl font-bold text-center mb-4\" },\r\n        `Assign New Parcel to ${lockerId}`\r\n      ),\r\n      React.createElement(\r\n        \"form\",\r\n        { className: \"space-y-4\" },\r\n        React.createElement(\r\n          \"div\",\r\n          null,\r\n          React.createElement(\"label\", { className: \"block mb-1\" }, \"Recipient Name:\"),\r\n          React.createElement(\"input\", {\r\n            type: \"text\",\r\n            name: \"recipientName\",\r\n            className: \"w-full border rounded px-3 py-1\",\r\n            onChange: handleChange,\r\n          })\r\n        ),\r\n        React.createElement(\r\n          \"div\",\r\n          null,\r\n          React.createElement(\"label\", { className: \"block mb-1\" }, \"Phone Number:\"),\r\n          React.createElement(\"input\", {\r\n            type: \"text\",\r\n            name: \"phone\",\r\n            className: \"w-full border rounded px-3 py-1\",\r\n            onChange: handleChange,\r\n          })\r\n        ),\r\n        React.createElement(\r\n          \"div\",\r\n          null,\r\n          React.createElement(\"label\", { className: \"block mb-1\" }, \"Product ID / Description:\"),\r\n          React.createElement(\"input\", {\r\n            type: \"text\",\r\n            name: \"productId\",\r\n            className: \"w-full border rounded px-3 py-1\",\r\n            onChange: handleChange,\r\n          })\r\n        ),\r\n        React.createElement(\r\n          \"div\",\r\n          { className: \"flex justify-end pt-4 gap-2\" },\r\n          React.createElement(\r\n            \"button\",\r\n            {\r\n              type: \"button\",\r\n              onClick: handleAssign,\r\n              className: \"bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600\",\r\n            },\r\n            \"Assign Parcel\"\r\n          ),\r\n          React.createElement(\r\n            \"button\",\r\n            {\r\n              type: \"button\",\r\n              onClick: onClose,\r\n              className: \"bg-gray-300 px-4 py-2 rounded\",\r\n            },\r\n            \"Cancel\"\r\n          )\r\n        )\r\n      )\r\n    )\r\n  );\r\n};\r\n\r\nexport default AssignParcelModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}